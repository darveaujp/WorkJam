{"version":3,"sources":["components/Header.jsx","components/CommentCard.jsx","components/Card.jsx","components/Content.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","this","props","title","React","Component","Card","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","comment","isLoaded","item","getComment","commentId","base","fetch","concat","context","then","setState","ReactHtmlParser","text","undefined","kids","length","map","key","CommentCard","id","showHide","newValue","_this2","_this$props","now","Moment","end","unix","time","duration","diff","parseInt","asHours","asMinutes","score","href","url","target","rel","by","onClick","showHideComments","firebase","initializeApp","databaseURL","db","database","rebase","createClass","Content","top10","storyIds","slice","getSingleStory","story","push","_this$state","components_Card","App","components_Header","components_Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62438ada.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='App-header'>\r\n        <h1>{this.props.title}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport CommentCard from './CommentCard.jsx';\r\n\r\nconst HN_VERSION = \"v0\";\r\n\r\n\r\nclass Card extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      comment: {},\r\n      isLoaded: true,\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { item } = this.props;\r\n\r\n    this.getComment(item)\r\n  }\r\n\r\n  getComment(commentId) {\r\n    const { base } = this.props;\r\n\r\n    base.fetch(`/${HN_VERSION}/item/${commentId}`, {\r\n      context: this,\r\n      then(comment) {\r\n        this.setState({comment});\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { base } = this.props;\r\n    const { comment } = this.state;\r\n    return (   \r\n      <li>\r\n        { ReactHtmlParser(comment.text) }\r\n        {comment.kids !== undefined && comment.kids.length > 0 ?\r\n          <ul className='commentList'>\r\n            {comment.kids.map((item, key) =>\r\n              <CommentCard base={base} item={item} key={item.id} />\r\n            )}              \r\n          </ul>\r\n       : null}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Moment from 'moment';\r\nimport CommentCard from './CommentCard.jsx';\r\n\r\nclass Card extends React.Component {  \r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      showHide: 'hide',\r\n    };\r\n  };  \r\n\r\n  showHideComments(){\r\n    const { showHide } = this.state;\r\n    const newValue = showHide === 'hide' ? 'show' : 'hide';\r\n\r\n    this.setState({showHide: newValue});\r\n\r\n  }\r\n\r\n  render() {\r\n    const { item, base } = this.props;\r\n    const { showHide } = this.state;\r\n    var now = Moment();\r\n    var end = Moment.unix(item.time);\r\n    var duration = Moment.duration(now.diff(end));\r\n    var time = parseInt(duration.asHours()) < 1 ? parseInt(duration.asMinutes()) + ' minutes' : parseInt(duration.asHours()) + ' hours';\r\n    return (\r\n      <div className='storyContainer'>\r\n        <div className='score'>{item.score} <span className='points'>points</span></div>\r\n        <h2 className='storyTitle'><a href={item.url} target='_blank' rel=\"noopener noreferrer\" className='App-link'>{item.title}</a></h2>\r\n        <div className='author'>By : {item.by} <span className='dateCreated'>{time} ago</span></div>\r\n        {item.kids !== undefined && item.kids.length > 0 ?\r\n          <div>\r\n            <div className='comments'>\r\n              <button className='App-text-button' onClick={() => { this.showHideComments(); }}>{showHide === 'hide' ? 'show' : 'hide'} top comments</button>\r\n            </div>\r\n            <div className={`commentsContainer ${showHide}`}>\r\n              <ul className='commentList'>\r\n                {item.kids.map((item, key) =>\r\n                  <CommentCard base={base} item={item} key={item.id} />\r\n                )}              \r\n              </ul>\r\n            </div> \r\n          </div>         \r\n        : null } \r\n      </div>           \r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport rebase from \"re-base\";\r\nimport firebase from \"@firebase/app\";\r\nimport \"@firebase/database\";\r\nimport Card from './Card.jsx';\r\n\r\nconst HN_DATABASE_URL = \"https://hacker-news.firebaseio.com\";\r\nconst HN_VERSION = \"v0\";\r\nconst nbTopStories = 10;\r\n\r\nfirebase.initializeApp({ databaseURL: HN_DATABASE_URL });\r\nlet db = firebase.database();\r\nlet base = rebase.createClass(db);\r\n\r\nclass Content extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      top10: [],\r\n      isLoaded: false,\r\n    };\r\n  };  \r\n\r\n  componentDidMount() {\r\n    base.fetch(`/${HN_VERSION}/topstories`, {\r\n      context: this,\r\n      then(storyIds) {\r\n        const top10Id = storyIds.slice(0,nbTopStories); \r\n        top10Id.map((item, key) =>\r\n          this.getSingleStory(item)\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  getSingleStory(id) {\r\n    const {top10} = this.state;\r\n    base.fetch(`/${HN_VERSION}/item/${id}`, {\r\n      context: this,\r\n      then(story) {\r\n        top10.push(story);\r\n        this.setState({top10});\r\n        if(top10.length === nbTopStories){\r\n          this.setState({isLoaded: true});\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {top10, isLoaded} = this.state;\r\n    return (\r\n    <div className='App'>\r\n      {isLoaded ? top10.map((item, key) =>\r\n        <Card base={base} item={item} key={item.id} />\r\n      ) : (<span>Loading Stories ....</span>)}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;","import React from 'react';\nimport Header from './components/Header.jsx';\nimport Content from './components/Content.jsx';\nimport './App.css';\n\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <Header title='Hacker new top 10 stories'/>\n        <Content/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}